environment:
    
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"

    - PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "32"

    - PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"

    - PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "64"

    - PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"

install:
  # Use the pre-installed Miniconda for the desired arch
  - ps: if($env:PYTHON_ARCH -eq '32') {
          $env:path="C:\Miniconda;C:\Miniconda\Scripts;C:Miniconda\Library\bin;$($env:path)"
        } 
        else {
          $env:path="C:\Miniconda-x64;C:\Miniconda-x64\Scripts;C:Miniconda-x64\Library\bin;$($env:path)"
        }
  
  # DEBUGGING 
  #- "SET PATH"
  #- "python --version"
  #- "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  #- "conda info"  
  #- "conda list"

  # Create and activate a conda environment with the desired Python version
  - "conda update --yes --quite conda"
  - "conda create --yes --quite -n matrix_env python=%PYTHON_VERSION%"
  - "activate matrix_env"

  # Check that we have the expected version and architecture for Python
  # in the conda environment
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

build: false

test_script:
  # In a real case we would run the unit tests, here just Hello World
  - "python -c \"print('Hello World!')\" -v"
